// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users/Hackers Section

// Add more tiers if needed
enum TierId {
  Beginner
  Learner
  Proficient
  Master
  Ace
  Legend
  God
}

// Models
model User {
  id        String   @id
  name      String
  email     String   @unique
  tierId    TierId   @default(Beginner)
  reports   Report[]
  invites   Invite[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Invite {
  id                 String    @id @default(cuid())
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId             String    @unique
  acceptanceStatus   Boolean?  @default(false)
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  cancelAtPeriodEnd  Boolean?  @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@map("invites")
}

// Company Section

model Company {
  id          String   @id @default(uuid())
  name        String
  description String
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Report      Report[]

  @@map("companies")
}

// Shared

// Enums
enum Status {
  Pending
  NeedsMoreInfo
  Accepted
  Rejected
}

enum Severity {
  P1_Critical
  P2_Major
  P3_High
  P4_Moderate
  P5_Low
}

// Models
model Report {
  id        String   @id @default(uuid())
  isPublic  Boolean  @default(false)
  status    Status   @default(Pending)
  priority  Severity
  content   String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reports")
}
